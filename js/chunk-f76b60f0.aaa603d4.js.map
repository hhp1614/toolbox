{"version":3,"sources":["webpack:///./node_modules/readable-stream/lib/_stream_transform.js","webpack:///./node_modules/core-util-is/lib/util.js","webpack:///./node_modules/readable-stream/lib/internal/streams/stream-browser.js","webpack:///./node_modules/readable-stream/lib/internal/streams/destroy.js","webpack:///./node_modules/readable-stream/lib/internal/streams/BufferList.js","webpack:///./node_modules/readable-stream/lib/_stream_passthrough.js","webpack:///./node_modules/process-nextick-args/index.js","webpack:///./node_modules/readable-stream/node_modules/safe-buffer/index.js","webpack:///./node_modules/readable-stream/lib/_stream_readable.js","webpack:///./node_modules/readable-stream/lib/_stream_duplex.js","webpack:///./node_modules/util-deprecate/browser.js","webpack:///./node_modules/readable-stream/lib/_stream_writable.js","webpack:///./node_modules/readable-stream/readable-browser.js"],"names":["module","exports","Transform","Duplex","util","Object","create","afterTransform","er","data","ts","this","_transformState","transforming","cb","writecb","emit","Error","writechunk","push","rs","_readableState","reading","needReadable","length","highWaterMark","_read","options","call","bind","needTransform","writeencoding","sync","transform","_transform","flush","_flush","on","prefinish","_this","done","stream","_writableState","inherits","prototype","chunk","encoding","_write","n","_destroy","err","_this2","err2","isArray","arg","Array","objectToString","isBoolean","isNull","isNullOrUndefined","isNumber","isString","isSymbol","isUndefined","isRegExp","re","isObject","isDate","d","isError","e","isFunction","isPrimitive","o","toString","isBuffer","Buffer","EventEmitter","pna","destroy","readableDestroyed","destroyed","writableDestroyed","errorEmitted","nextTick","emitErrorNT","undestroy","ended","endEmitted","ending","finished","self","_classCallCheck","instance","Constructor","TypeError","copyBuffer","src","target","offset","copy","BufferList","head","tail","v","entry","next","unshift","shift","ret","clear","join","s","p","concat","alloc","allocUnsafe","i","inspect","custom","obj","constructor","name","PassThrough","fn","arg1","arg2","arg3","args","len","arguments","process","apply","version","indexOf","buffer","copyProps","dst","key","SafeBuffer","encodingOrOffset","from","allocUnsafeSlow","size","fill","buf","undefined","SlowBuffer","Readable","ReadableState","EElistenerCount","emitter","type","listeners","Stream","OurUint8Array","global","Uint8Array","_uint8ArrayToBuffer","_isUint8Array","debugUtil","debug","debuglog","StringDecoder","destroyImpl","kProxyEvents","prependListener","event","_events","isDuplex","objectMode","readableObjectMode","hwm","readableHwm","readableHighWaterMark","defaultHwm","Math","floor","pipes","pipesCount","flowing","emittedReadable","readableListening","resumeScheduled","defaultEncoding","awaitDrain","readingMore","decoder","readable","read","readableAddChunk","addToFront","skipChunkCheck","state","onEofChunk","chunkInvalid","getPrototypeOf","addChunk","write","maybeReadMore","needMoreData","emitReadable","defineProperty","get","set","value","_undestroy","isPaused","setEncoding","enc","MAX_HWM","computeNewHighWaterMark","howMuchToRead","end","emitReadable_","flow","maybeReadMore_","pipeOnDrain","nReadingNextTick","resume","resume_","fromList","fromListPartial","list","hasStrings","slice","copyFromBufferString","copyFromBuffer","c","str","nb","endReadable","endReadableNT","xs","x","l","parseInt","nOrig","doRead","pipe","dest","pipeOpts","doEnd","stdout","stderr","endFn","onend","unpipe","onunpipe","unpipeInfo","hasUnpiped","cleanup","once","ondrain","cleanedUp","removeListener","onclose","onfinish","onerror","ondata","needDrain","increasedAwaitDrain","pause","dests","index","splice","ev","res","addListener","wrap","paused","method","enumerable","_fromList","objectKeys","keys","Writable","writable","allowHalfOpen","onEndNT","deprecate","msg","config","warned","deprecated","console","trace","warn","localStorage","_","val","String","toLowerCase","CorkedRequest","finish","onCorkedFinish","asyncWrite","browser","setImmediate","WritableState","internalUtil","realHasInstance","nop","writableObjectMode","writableHwm","writableHighWaterMark","finalCalled","noDecode","decodeStrings","writing","corked","bufferProcessing","onwrite","writelen","bufferedRequest","lastBufferedRequest","pendingcb","prefinished","bufferedRequestCount","corkedRequestsFree","writev","_writev","final","_final","writeAfterEnd","validChunk","valid","decodeChunk","writeOrBuffer","isBuf","newChunk","last","callback","doWrite","onwriteError","finishMaybe","onwriteStateUpdate","needFinish","clearBuffer","afterWrite","onwriteDrain","holder","count","allBuffers","callFinal","need","endWritable","corkReq","getBuffer","current","out","Symbol","hasInstance","Function","object","cork","uncork","setDefaultEncoding"],"mappings":"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","file":"js/chunk-f76b60f0.aaa603d4.js","sourcesContent":["// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n'use strict';\n\nmodule.exports = Transform;\n\nvar Duplex = require('./_stream_duplex');\n\n/*<replacement>*/\nvar util = Object.create(require('core-util-is'));\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(Transform, Duplex);\n\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n\n  var cb = ts.writecb;\n\n  if (!cb) {\n    return this.emit('error', new Error('write callback called multiple times'));\n  }\n\n  ts.writechunk = null;\n  ts.writecb = null;\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    this.push(data);\n\n  cb(er);\n\n  var rs = this._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\n\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n\n  Duplex.call(this, options);\n\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  };\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  // When the writable side finishes, then flush out anything remaining.\n  this.on('prefinish', prefinish);\n}\n\nfunction prefinish() {\n  var _this = this;\n\n  if (typeof this._flush === 'function') {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  throw new Error('_transform() is not implemented');\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nTransform.prototype._destroy = function (err, cb) {\n  var _this2 = this;\n\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n    _this2.emit('close');\n  });\n};\n\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    stream.push(data);\n\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  if (stream._writableState.length) throw new Error('Calling transform done when ws.length != 0');\n\n  if (stream._transformState.transforming) throw new Error('Calling transform done when still transforming');\n\n  return stream.push(null);\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\n\nfunction isArray(arg) {\n  if (Array.isArray) {\n    return Array.isArray(arg);\n  }\n  return objectToString(arg) === '[object Array]';\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = Buffer.isBuffer;\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n","module.exports = require('events').EventEmitter;\n","'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\n// undocumented cb() API, needed for core, not for public API\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err && (!this._writableState || !this._writableState.errorEmitted)) {\n      pna.nextTick(emitErrorNT, this, err);\n    }\n    return this;\n  }\n\n  // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  }\n\n  // if this is a duplex stream mark the writable part as destroyed as well\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      pna.nextTick(emitErrorNT, _this, err);\n      if (_this._writableState) {\n        _this._writableState.errorEmitted = true;\n      }\n    } else if (cb) {\n      cb(err);\n    }\n  });\n\n  return this;\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy\n};","'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Buffer = require('safe-buffer').Buffer;\nvar util = require('util');\n\nfunction copyBuffer(src, target, offset) {\n  src.copy(target, offset);\n}\n\nmodule.exports = function () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  BufferList.prototype.push = function push(v) {\n    var entry = { data: v, next: null };\n    if (this.length > 0) this.tail.next = entry;else this.head = entry;\n    this.tail = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.unshift = function unshift(v) {\n    var entry = { data: v, next: this.head };\n    if (this.length === 0) this.tail = entry;\n    this.head = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.shift = function shift() {\n    if (this.length === 0) return;\n    var ret = this.head.data;\n    if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n    --this.length;\n    return ret;\n  };\n\n  BufferList.prototype.clear = function clear() {\n    this.head = this.tail = null;\n    this.length = 0;\n  };\n\n  BufferList.prototype.join = function join(s) {\n    if (this.length === 0) return '';\n    var p = this.head;\n    var ret = '' + p.data;\n    while (p = p.next) {\n      ret += s + p.data;\n    }return ret;\n  };\n\n  BufferList.prototype.concat = function concat(n) {\n    if (this.length === 0) return Buffer.alloc(0);\n    if (this.length === 1) return this.head.data;\n    var ret = Buffer.allocUnsafe(n >>> 0);\n    var p = this.head;\n    var i = 0;\n    while (p) {\n      copyBuffer(p.data, ret, i);\n      i += p.data.length;\n      p = p.next;\n    }\n    return ret;\n  };\n\n  return BufferList;\n}();\n\nif (util && util.inspect && util.inspect.custom) {\n  module.exports.prototype[util.inspect.custom] = function () {\n    var obj = util.inspect({ length: this.length });\n    return this.constructor.name + ' ' + obj;\n  };\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict';\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\n/*<replacement>*/\nvar util = Object.create(require('core-util-is'));\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};","'use strict';\n\nif (typeof process === 'undefined' ||\n    !process.version ||\n    process.version.indexOf('v0.') === 0 ||\n    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {\n  module.exports = { nextTick: nextTick };\n} else {\n  module.exports = process\n}\n\nfunction nextTick(fn, arg1, arg2, arg3) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('\"callback\" argument must be a function');\n  }\n  var len = arguments.length;\n  var args, i;\n  switch (len) {\n  case 0:\n  case 1:\n    return process.nextTick(fn);\n  case 2:\n    return process.nextTick(function afterTickOne() {\n      fn.call(null, arg1);\n    });\n  case 3:\n    return process.nextTick(function afterTickTwo() {\n      fn.call(null, arg1, arg2);\n    });\n  case 4:\n    return process.nextTick(function afterTickThree() {\n      fn.call(null, arg1, arg2, arg3);\n    });\n  default:\n    args = new Array(len - 1);\n    i = 0;\n    while (i < args.length) {\n      args[i++] = arguments[i];\n    }\n    return process.nextTick(function afterTick() {\n      fn.apply(null, args);\n    });\n  }\n}\n\n","/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar isArray = require('isarray');\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = require('events').EventEmitter;\n\nvar EElistenerCount = function (emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\n/*<replacement>*/\nvar util = Object.create(require('core-util-is'));\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar debugUtil = require('util');\nvar debug = void 0;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function () {};\n}\n/*</replacement>*/\n\nvar BufferList = require('./internal/streams/BufferList');\nvar destroyImpl = require('./internal/streams/destroy');\nvar StringDecoder;\n\nutil.inherits(Readable, Stream);\n\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\n\nfunction ReadableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  var readableHwm = options.readableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (readableHwm || readableHwm === 0)) this.highWaterMark = readableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n\n  Stream.call(this);\n}\n\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n  }\n});\n\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function (err, cb) {\n  this.push(null);\n  cb(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\n\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  var state = stream._readableState;\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n    if (er) {\n      stream.emit('error', er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n\n      if (addToFront) {\n        if (state.endEmitted) stream.emit('error', new Error('stream.unshift() after end event'));else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        stream.emit('error', new Error('stream.push() after EOF'));\n      } else {\n        state.reading = false;\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n    }\n  }\n\n  return needMoreData(state);\n}\n\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    stream.emit('data', chunk);\n    stream.read(0);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n\n    if (state.needReadable) emitReadable(stream);\n  }\n  maybeReadMore(stream, state);\n}\n\nfunction chunkInvalid(state, chunk) {\n  var er;\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);\n}\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n  return this;\n};\n\n// Don't raise the hwm > 8MB\nvar MAX_HWM = 0x800000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = true;\n    n = 0;\n  } else {\n    state.length -= n;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n\n  return ret;\n};\n\nfunction onEofChunk(stream, state) {\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // emit 'readable' now to make sure it gets picked up.\n  emitReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    if (state.sync) pna.nextTick(emitReadable_, stream);else emitReadable_(stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  debug('emit readable');\n  stream.emit('readable');\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    pna.nextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;else len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  this.emit('error', new Error('_read() is not implemented'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) pna.nextTick(endFn);else src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  // If the user pushes more data while we're writing to dest then we'll end up\n  // in ondata again. However, we only want to increase awaitDrain once because\n  // dest will only emit one 'drain' event for the multiple writes.\n  // => Introduce a guard on increasing awaitDrain.\n  var increasedAwaitDrain = false;\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    increasedAwaitDrain = false;\n    var ret = dest.write(chunk);\n    if (false === ret && !increasedAwaitDrain) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', src._readableState.awaitDrain);\n        src._readableState.awaitDrain++;\n        increasedAwaitDrain = true;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function () {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = { hasUnpiped: false };\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++) {\n      dests[i].emit('unpipe', this, unpipeInfo);\n    }return this;\n  }\n\n  // try to find the right one.\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this, unpipeInfo);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n\n  if (ev === 'data') {\n    // Start flowing on next tick if stream isn't explicitly paused\n    if (this._readableState.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    var state = this._readableState;\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.emittedReadable = false;\n      if (!state.reading) {\n        pna.nextTick(nReadingNextTick, this);\n      } else if (state.length) {\n        emitReadable(this);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    state.flowing = true;\n    resume(this, state);\n  }\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    pna.nextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  if (!state.reading) {\n    debug('resume read 0');\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  state.awaitDrain = 0;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (false !== this._readableState.flowing) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null) {}\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n\n  var state = this._readableState;\n  var paused = false;\n\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n\n    _this.push(null);\n  });\n\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = _this.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function (method) {\n        return function () {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  }\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  this._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return this;\n};\n\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._readableState.highWaterMark;\n  }\n});\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = fromListPartial(n, state.buffer, state.decoder);\n  }\n\n  return ret;\n}\n\n// Extracts only enough buffered data to satisfy the amount requested.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromListPartial(n, list, hasStrings) {\n  var ret;\n  if (n < list.head.data.length) {\n    // slice is the same for buffers and strings\n    ret = list.head.data.slice(0, n);\n    list.head.data = list.head.data.slice(n);\n  } else if (n === list.head.data.length) {\n    // first chunk is a perfect match\n    ret = list.shift();\n  } else {\n    // result spans more than one buffer\n    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);\n  }\n  return ret;\n}\n\n// Copies a specified amount of characters from the list of buffered data\n// chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBufferString(n, list) {\n  var p = list.head;\n  var c = 1;\n  var ret = p.data;\n  n -= ret.length;\n  while (p = p.next) {\n    var str = p.data;\n    var nb = n > str.length ? str.length : n;\n    if (nb === str.length) ret += str;else ret += str.slice(0, n);\n    n -= nb;\n    if (n === 0) {\n      if (nb === str.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = str.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\n// Copies a specified amount of bytes from the list of buffered data chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBuffer(n, list) {\n  var ret = Buffer.allocUnsafe(n);\n  var p = list.head;\n  var c = 1;\n  p.data.copy(ret);\n  n -= p.data.length;\n  while (p = p.next) {\n    var buf = p.data;\n    var nb = n > buf.length ? buf.length : n;\n    buf.copy(ret, ret.length - n, 0, nb);\n    n -= nb;\n    if (n === 0) {\n      if (nb === buf.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = buf.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0) throw new Error('\"endReadable()\" called on non-empty stream');\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    pna.nextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n  }\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    keys.push(key);\n  }return keys;\n};\n/*</replacement>*/\n\nmodule.exports = Duplex;\n\n/*<replacement>*/\nvar util = Object.create(require('core-util-is'));\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\n\nutil.inherits(Duplex, Readable);\n\n{\n  // avoid scope creep, the keys array can then be collected\n  var keys = objectKeys(Writable.prototype);\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false) this.readable = false;\n\n  if (options && options.writable === false) this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  pna.nextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});\n\nDuplex.prototype._destroy = function (err, cb) {\n  this.push(null);\n  this.end();\n\n  pna.nextTick(cb, err);\n};","\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Writable;\n\n/* <replacement> */\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\nvar asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : pna.nextTick;\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n/*<replacement>*/\nvar util = Object.create(require('core-util-is'));\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nutil.inherits(Writable, Stream);\n\nfunction nop() {}\n\nfunction WritableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  var writableHwm = options.writableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (writableHwm || writableHwm === 0)) this.highWaterMark = writableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // if _final has been called\n  this.finalCalled = false;\n\n  // drain event flag.\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function () {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})();\n\n// Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\nvar realHasInstance;\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function (object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function (object) {\n    return object instanceof this;\n  };\n}\n\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n  if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {\n    return new Writable(options);\n  }\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n\n    if (typeof options.writev === 'function') this._writev = options.writev;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  this.emit('error', new Error('Cannot pipe, not readable'));\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  pna.nextTick(cb, er);\n}\n\n// Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n  var er = false;\n\n  if (chunk === null) {\n    er = new TypeError('May not write null values to stream');\n  } else if (typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  if (er) {\n    stream.emit('error', er);\n    pna.nextTick(cb, er);\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n\n  if (typeof cb !== 'function') cb = nop;\n\n  if (state.ended) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  var state = this._writableState;\n\n  state.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n\n    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\n\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    pna.nextTick(cb, er);\n    // this can emit finish, and it will always happen\n    // after error\n    pna.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n    // this can emit finish, but finish must\n    // always follow error\n    finishMaybe(stream, state);\n  }\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state);\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      /*<replacement>*/\n      asyncWrite(afterWrite, stream, state, finished, cb);\n      /*</replacement>*/\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n\n    var count = 0;\n    var allBuffers = true;\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n    buffer.allBuffers = allBuffers;\n\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new Error('_write() is not implemented'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending && !state.finished) endWritable(this, state, cb);\n};\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n    if (err) {\n      stream.emit('error', err);\n    }\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function') {\n      state.pendingcb++;\n      state.finalCalled = true;\n      pna.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    prefinish(stream, state);\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n    }\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) pna.nextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\n\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  }\n  if (state.corkedRequestsFree) {\n    state.corkedRequestsFree.next = corkReq;\n  } else {\n    state.corkedRequestsFree = corkReq;\n  }\n}\n\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  get: function () {\n    if (this._writableState === undefined) {\n      return false;\n    }\n    return this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._writableState.destroyed = value;\n  }\n});\n\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function (err, cb) {\n  this.end();\n  cb(err);\n};","exports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\n"],"sourceRoot":""}