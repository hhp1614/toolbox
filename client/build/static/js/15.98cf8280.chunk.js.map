{"version":3,"sources":["../node_modules/charenc/charenc.js","../node_modules/sha1/sha1.js","../node_modules/crypt/crypt.js","views/codec/sha1/index.tsx","components/CopyButton.tsx"],"names":["charenc","utf8","stringToBytes","str","bin","unescape","encodeURIComponent","bytesToString","bytes","decodeURIComponent","escape","i","length","push","charCodeAt","String","fromCharCode","join","module","exports","crypt","require","api","message","options","digestbytes","wordsToBytes","constructor","Buffer","isBuffer","Array","prototype","slice","call","isArray","toString","m","bytesToWords","l","w","H0","H1","H2","H3","H4","a","b","c","d","e","j","n","t","sha1","asBytes","asString","bytesToHex","_blocksize","_digestsize","base64map","rotl","rotr","endian","Number","randomBytes","Math","floor","random","words","hex","hexToBytes","parseInt","substr","bytesToBase64","base64","triplet","charAt","base64ToBytes","replace","imod4","indexOf","pow","Sha1","useState","sourceValue","setSourceValue","outputValue","setOutputValue","id","className","value","onChange","target","placeholder","onClick","text","readOnly","CopyButton","copied","setCopied","onCopy","setTimeout","style","color"],"mappings":"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","file":"static/js/15.98cf8280.chunk.js","sourcesContent":["var charenc = {\n  // UTF-8 encoding\n  utf8: {\n    // Convert a string to a byte array\n    stringToBytes: function(str) {\n      return charenc.bin.stringToBytes(unescape(encodeURIComponent(str)));\n    },\n\n    // Convert a byte array to a string\n    bytesToString: function(bytes) {\n      return decodeURIComponent(escape(charenc.bin.bytesToString(bytes)));\n    }\n  },\n\n  // Binary encoding\n  bin: {\n    // Convert a string to a byte array\n    stringToBytes: function(str) {\n      for (var bytes = [], i = 0; i < str.length; i++)\n        bytes.push(str.charCodeAt(i) & 0xFF);\n      return bytes;\n    },\n\n    // Convert a byte array to a string\n    bytesToString: function(bytes) {\n      for (var str = [], i = 0; i < bytes.length; i++)\n        str.push(String.fromCharCode(bytes[i]));\n      return str.join('');\n    }\n  }\n};\n\nmodule.exports = charenc;\n","(function() {\n  var crypt = require('crypt'),\n      utf8 = require('charenc').utf8,\n      bin = require('charenc').bin,\n\n  // The core\n  sha1 = function (message) {\n    // Convert to byte array\n    if (message.constructor == String)\n      message = utf8.stringToBytes(message);\n    else if (typeof Buffer !== 'undefined' && typeof Buffer.isBuffer == 'function' && Buffer.isBuffer(message))\n      message = Array.prototype.slice.call(message, 0);\n    else if (!Array.isArray(message))\n      message = message.toString();\n\n    // otherwise assume byte array\n\n    var m  = crypt.bytesToWords(message),\n        l  = message.length * 8,\n        w  = [],\n        H0 =  1732584193,\n        H1 = -271733879,\n        H2 = -1732584194,\n        H3 =  271733878,\n        H4 = -1009589776;\n\n    // Padding\n    m[l >> 5] |= 0x80 << (24 - l % 32);\n    m[((l + 64 >>> 9) << 4) + 15] = l;\n\n    for (var i = 0; i < m.length; i += 16) {\n      var a = H0,\n          b = H1,\n          c = H2,\n          d = H3,\n          e = H4;\n\n      for (var j = 0; j < 80; j++) {\n\n        if (j < 16)\n          w[j] = m[i + j];\n        else {\n          var n = w[j - 3] ^ w[j - 8] ^ w[j - 14] ^ w[j - 16];\n          w[j] = (n << 1) | (n >>> 31);\n        }\n\n        var t = ((H0 << 5) | (H0 >>> 27)) + H4 + (w[j] >>> 0) + (\n                j < 20 ? (H1 & H2 | ~H1 & H3) + 1518500249 :\n                j < 40 ? (H1 ^ H2 ^ H3) + 1859775393 :\n                j < 60 ? (H1 & H2 | H1 & H3 | H2 & H3) - 1894007588 :\n                         (H1 ^ H2 ^ H3) - 899497514);\n\n        H4 = H3;\n        H3 = H2;\n        H2 = (H1 << 30) | (H1 >>> 2);\n        H1 = H0;\n        H0 = t;\n      }\n\n      H0 += a;\n      H1 += b;\n      H2 += c;\n      H3 += d;\n      H4 += e;\n    }\n\n    return [H0, H1, H2, H3, H4];\n  },\n\n  // Public API\n  api = function (message, options) {\n    var digestbytes = crypt.wordsToBytes(sha1(message));\n    return options && options.asBytes ? digestbytes :\n        options && options.asString ? bin.bytesToString(digestbytes) :\n        crypt.bytesToHex(digestbytes);\n  };\n\n  api._blocksize = 16;\n  api._digestsize = 20;\n\n  module.exports = api;\n})();\n","(function() {\n  var base64map\n      = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n\n  crypt = {\n    // Bit-wise rotation left\n    rotl: function(n, b) {\n      return (n << b) | (n >>> (32 - b));\n    },\n\n    // Bit-wise rotation right\n    rotr: function(n, b) {\n      return (n << (32 - b)) | (n >>> b);\n    },\n\n    // Swap big-endian to little-endian and vice versa\n    endian: function(n) {\n      // If number given, swap endian\n      if (n.constructor == Number) {\n        return crypt.rotl(n, 8) & 0x00FF00FF | crypt.rotl(n, 24) & 0xFF00FF00;\n      }\n\n      // Else, assume array and swap all items\n      for (var i = 0; i < n.length; i++)\n        n[i] = crypt.endian(n[i]);\n      return n;\n    },\n\n    // Generate an array of any length of random bytes\n    randomBytes: function(n) {\n      for (var bytes = []; n > 0; n--)\n        bytes.push(Math.floor(Math.random() * 256));\n      return bytes;\n    },\n\n    // Convert a byte array to big-endian 32-bit words\n    bytesToWords: function(bytes) {\n      for (var words = [], i = 0, b = 0; i < bytes.length; i++, b += 8)\n        words[b >>> 5] |= bytes[i] << (24 - b % 32);\n      return words;\n    },\n\n    // Convert big-endian 32-bit words to a byte array\n    wordsToBytes: function(words) {\n      for (var bytes = [], b = 0; b < words.length * 32; b += 8)\n        bytes.push((words[b >>> 5] >>> (24 - b % 32)) & 0xFF);\n      return bytes;\n    },\n\n    // Convert a byte array to a hex string\n    bytesToHex: function(bytes) {\n      for (var hex = [], i = 0; i < bytes.length; i++) {\n        hex.push((bytes[i] >>> 4).toString(16));\n        hex.push((bytes[i] & 0xF).toString(16));\n      }\n      return hex.join('');\n    },\n\n    // Convert a hex string to a byte array\n    hexToBytes: function(hex) {\n      for (var bytes = [], c = 0; c < hex.length; c += 2)\n        bytes.push(parseInt(hex.substr(c, 2), 16));\n      return bytes;\n    },\n\n    // Convert a byte array to a base-64 string\n    bytesToBase64: function(bytes) {\n      for (var base64 = [], i = 0; i < bytes.length; i += 3) {\n        var triplet = (bytes[i] << 16) | (bytes[i + 1] << 8) | bytes[i + 2];\n        for (var j = 0; j < 4; j++)\n          if (i * 8 + j * 6 <= bytes.length * 8)\n            base64.push(base64map.charAt((triplet >>> 6 * (3 - j)) & 0x3F));\n          else\n            base64.push('=');\n      }\n      return base64.join('');\n    },\n\n    // Convert a base-64 string to a byte array\n    base64ToBytes: function(base64) {\n      // Remove non-base-64 characters\n      base64 = base64.replace(/[^A-Z0-9+\\/]/ig, '');\n\n      for (var bytes = [], i = 0, imod4 = 0; i < base64.length;\n          imod4 = ++i % 4) {\n        if (imod4 == 0) continue;\n        bytes.push(((base64map.indexOf(base64.charAt(i - 1))\n            & (Math.pow(2, -2 * imod4 + 8) - 1)) << (imod4 * 2))\n            | (base64map.indexOf(base64.charAt(i)) >>> (6 - imod4 * 2)));\n      }\n      return bytes;\n    }\n  };\n\n  module.exports = crypt;\n})();\n","import React, { FC, useState } from 'react';\nimport sha1 from 'sha1';\nimport CopyButton from '../../../components/CopyButton';\n\nconst Sha1: FC = () => {\n  const [sourceValue, setSourceValue] = useState('');\n  const [outputValue, setOutputValue] = useState('');\n\n  const encode = () => setOutputValue(sha1(sourceValue));\n\n  const clearSourceValue = () => {\n    setSourceValue('');\n    setOutputValue('');\n  };\n\n  return (\n    <div id=\"sha1\">\n      <div className=\"title\">SHA-1 计算</div>\n      <div className=\"source\">\n        <textarea\n          value={sourceValue}\n          onChange={e => setSourceValue(e.target.value)}\n          placeholder=\"输入需要 SHA-1 计算的字符串\"\n        />\n      </div>\n      <div className=\"action\">\n        <button className=\"primary\" onClick={encode}>计算</button>\n        <button className=\"error\" onClick={clearSourceValue}>清空</button>\n        <CopyButton text={outputValue} />\n      </div>\n      <div className=\"output\">\n        <textarea value={outputValue} readOnly />\n      </div>\n    </div>\n  );\n};\n\nexport default Sha1;\n","import React, { FC, useState } from 'react';\nimport CopyToClipboard from 'react-copy-to-clipboard';\n\ntype CopyButtonProps = {\n  // 需要复制的文本\n  text: string;\n};\n\nconst CopyButton: FC<CopyButtonProps> = ({ text }) => {\n  const [copied, setCopied] = useState(false);\n\n  const copyText = () => {\n    setCopied(true);\n    setTimeout(() => setCopied(false), 2000);\n  };\n\n  return (\n    <>\n      <CopyToClipboard text={text} onCopy={copyText}>\n        <button className=\"warn\">复制结果</button>\n      </CopyToClipboard>\n      {copied ? <span style={{ color: '#52c41a' }}>已复制</span> : null}\n    </>\n  );\n};\n\nexport default CopyButton;\n"],"sourceRoot":""}