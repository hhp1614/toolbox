{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","views/format/json/index.tsx"],"names":["_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","Index","useState","id","source","isActive","list","setList","sourceValue","setSourceValue","sourceRef","useRef","className","map","i","key","onClick","forEach","push","length","current","style","height","ref","onChange","value","scrollHeight","placeholder","src","trim","errJson","ERROR","res","JSON","parse","t","setOutputValue","name"],"mappings":"kIAIe,SAASA,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIC,MAAMC,QAAQF,GAAM,OAAO,OAAAG,EAAA,GAAiBH,GDGzC,CAAkBA,IELZ,SAA0BI,GACvC,GAAsB,qBAAXC,QAA0BA,OAAOC,YAAYC,OAAOH,GAAO,OAAOH,MAAMO,KAAKJ,GFIvD,CAAgBJ,IAAQ,OAAAS,EAAA,GAA2BT,IGLvE,WACb,MAAM,IAAIU,UAAU,wIHIwE,G,6CIiF/EC,UA7EG,WAAO,IAAD,EACEC,mBAAe,CAAC,CAAEC,GAAI,EAAGC,OAAQ,GAAIC,UAAU,KADjD,mBACfC,EADe,KACTC,EADS,OAEgBL,mBAAS,IAFzB,mBAEfM,EAFe,KAEFC,EAFE,KAGhBC,EAAYC,iBAA4B,IA8C9C,OACE,yBAAKR,GAAG,QACN,yBAAKS,UAAU,SAAf,2BACA,yBAAKA,UAAU,OACZN,EAAKO,KAAI,SAAAC,GAAC,OACT,yBAAKC,IAAKD,EAAEX,GAAIS,UAAS,eAAUE,EAAET,SAAW,SAAW,IAAMW,QAAS,kBAjD/Db,EAiD+EW,EAAEX,GAhDlGG,EAAKW,SAAQ,SAAAH,GACXA,EAAET,SAAWS,EAAEX,KAAOA,EAClBW,EAAET,UACJI,EAAeK,EAAEV,gBAGrBG,EAAQ,EAAID,IAPI,IAACH,IAiDX,OACOW,EAAEX,OAGX,yBAAKS,UAAU,OAAOI,QA3Cb,WACbV,EAAKW,SAAQ,SAAAH,GAAC,OAAIA,EAAET,UAAW,KAC/BC,EAAKY,KAAK,CAAEf,GAAIG,EAAKa,OAAQf,OAAQ,GAAIC,UAAU,IACnDE,EAAQ,EAAID,IACZG,EAAe,MAuCX,KACA,4BAAQG,UAAU,QAAQI,QAjBP,WACvBV,EAAKW,SAAQ,SAAAH,GAAC,OAAIA,EAAET,WAAaS,EAAEV,OAAS,OAC5CG,EAAQ,EAAID,IACZG,EAAe,IACfC,EAAUU,QAAQC,MAAMC,OAAS,UAa7B,iBAEF,yBAAKV,UAAU,WACb,8BACEA,UAAU,SACVW,IAAKb,EACLc,SA3CY,WAClB,IAAMC,EAAQf,EAAUU,QAAQK,MAChCnB,EAAKW,SAAQ,SAAAH,GAAC,OAAIA,EAAET,WAAaS,EAAEV,OAASqB,MAC5ClB,EAAQ,EAAID,IACZG,EAAegB,GACff,EAAUU,QAAQC,MAAMC,OAAS,EAAIZ,EAAUU,QAAQM,aAAe,MAuChED,MAAOjB,EACPmB,YAAY,0DAEd,yBAAKf,UAAU,UACb,kBAAC,IAAD,CAAWgB,IAxCI,SAACxB,GACtB,GAAsB,KAAlBA,EAAOyB,OAAe,MAAO,GACjC,IAAMC,EAAU,CAAEC,MAAO,oDACzB,IACE,IAAMC,EAAMC,KAAKC,MAAM9B,GACjB+B,SAAWH,EACjB,OAAa,MAALG,GAAmB,WAANA,EAAkBH,EAAMF,EAC7C,SACA,OAAOA,GAgCaM,CAAe5B,GAAc6B,MAAM","file":"static/js/18.4f272a24.chunk.js","sourcesContent":["import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { FC, useRef, useState } from 'react';\nimport ReactJson from 'react-json-view';\n\ntype List = {\n  id: number;\n  source: string;\n  isActive: boolean;\n}[];\n\nconst Index: FC = () => {\n  const [list, setList] = useState<List>([{ id: 0, source: '', isActive: true }]);\n  const [sourceValue, setSourceValue] = useState('');\n  const sourceRef = useRef<HTMLTextAreaElement>({} as HTMLTextAreaElement);\n\n  const changeTab = (id: number) => {\n    list.forEach(i => {\n      i.isActive = i.id === id;\n      if (i.isActive) {\n        setSourceValue(i.source);\n      }\n    });\n    setList([...list]);\n  };\n\n  const addTab = () => {\n    list.forEach(i => i.isActive = false);\n    list.push({ id: list.length, source: '', isActive: true });\n    setList([...list]);\n    setSourceValue('');\n  };\n\n  const handleInput = () => {\n    const value = sourceRef.current.value;\n    list.forEach(i => i.isActive && (i.source = value));\n    setList([...list]);\n    setSourceValue(value);\n    sourceRef.current.style.height = 2 + sourceRef.current.scrollHeight + 'px';\n  };\n\n  const setOutputValue = (source: string) => {\n    if (source.trim() === '') return {};\n    const errJson = { ERROR: '不是有效的 JSON 对象' };\n    try {\n      const res = JSON.parse(source);\n      const t = typeof res;\n      return (t != null && t === 'object') ? res : errJson;\n    } catch {\n      return errJson;\n    }\n  };\n\n  const clearSourceValue = () => {\n    list.forEach(i => i.isActive && (i.source = ''));\n    setList([...list]);\n    setSourceValue('');\n    sourceRef.current.style.height = 498 + 'px';\n  };\n\n  return (\n    <div id=\"json\">\n      <div className=\"title\">JSON 格式化</div>\n      <div className=\"tab\">\n        {list.map(i =>\n          <div key={i.id} className={`item ${i.isActive ? 'active' : ''}`} onClick={() => changeTab(i.id)}>\n            tab-{i.id}\n          </div>\n        )}\n        <div className=\"item\" onClick={addTab}>+</div>\n        <button className=\"error\" onClick={clearSourceValue}>清空</button>\n      </div>\n      <div className=\"content\">\n        <textarea\n          className=\"source\"\n          ref={sourceRef}\n          onChange={handleInput}\n          value={sourceValue}\n          placeholder=\"输入需要格式化的 JSON\"\n        />\n        <div className=\"output\">\n          <ReactJson src={setOutputValue(sourceValue)} name={false} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Index;\n"],"sourceRoot":""}